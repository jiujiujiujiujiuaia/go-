package main

/*
 * @lc app=leetcode.cn id=212 lang=golang
 *
 * [212] 单词搜索 II
 */

// @lc code=start

//没时间写了

//这个和79题是一样的，但是如果说words数组很大，每个单词都要遍历一遍整个数组
//就很亏，因此想一想，如果确认了一个单词是ok，下一个单词是上一个ok单词的前缀，是不是就可以直接判断
//省去再遍历一遍了。

//这就是前缀树的优势1.可以共有拥有相同前缀的字符串 这是hash不具有的
//2.节省空间

//思路是：构建两颗前缀树，一颗是成功前缀树，一颗是失败前缀树
//如果当前字符在成功前缀树，则直接加入命中数组
//如果在失败前缀树，则跳过本次搜索

//但是这个思路有一种情况会退化，就是aaab aaac aaad 也就是大家不是谁的前缀
//而是共有前缀
func findWords(board [][]byte, words []string) []string {

}

// @lc code=end
