// Code generated by protoc-gen-go.
// source: k12_admin_course_apply_svr.proto
// DO NOT EDIT!

/*
Package com_tencent_edu_k12_pb_k12_admin_apply_course_svr is a generated protocol buffer package.

It is generated from these files:
	k12_admin_course_apply_svr.proto

It has these top-level messages:
	BatchApplyCourseWhiteReq
	BatchApplyCourseWhiteResp
	ApplyCourseInfo
	BatchApplyCourseWhiteRetryReq
	BatchApplyCourseWhiteRetryResp
*/
package echo_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 批量报名接口
type BatchApplyCourseWhiteReq struct {
	ApplyCourseInfo  []*ApplyCourseInfo `protobuf:"bytes,1,rep,name=applyCourseInfo" json:"applyCourseInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *BatchApplyCourseWhiteReq) Reset()                    { *m = BatchApplyCourseWhiteReq{} }
func (m *BatchApplyCourseWhiteReq) String() string            { return proto.CompactTextString(m) }
func (*BatchApplyCourseWhiteReq) ProtoMessage()               {}
func (*BatchApplyCourseWhiteReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *BatchApplyCourseWhiteReq) GetApplyCourseInfo() []*ApplyCourseInfo {
	if m != nil {
		return m.ApplyCourseInfo
	}
	return nil
}

type BatchApplyCourseWhiteResp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *BatchApplyCourseWhiteResp) Reset()                    { *m = BatchApplyCourseWhiteResp{} }
func (m *BatchApplyCourseWhiteResp) String() string            { return proto.CompactTextString(m) }
func (*BatchApplyCourseWhiteResp) ProtoMessage()               {}
func (*BatchApplyCourseWhiteResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type ApplyCourseInfo struct {
	UidType          *int64  `protobuf:"varint,1,opt,name=uid_type" json:"uid_type,omitempty"`
	Uid              *int64  `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Cid              *int64  `protobuf:"varint,3,opt,name=cid" json:"cid,omitempty"`
	Operator         *string `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
	Reason           *string `protobuf:"bytes,5,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApplyCourseInfo) Reset()                    { *m = ApplyCourseInfo{} }
func (m *ApplyCourseInfo) String() string            { return proto.CompactTextString(m) }
func (*ApplyCourseInfo) ProtoMessage()               {}
func (*ApplyCourseInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ApplyCourseInfo) GetUidType() int64 {
	if m != nil && m.UidType != nil {
		return *m.UidType
	}
	return 0
}

func (m *ApplyCourseInfo) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ApplyCourseInfo) GetCid() int64 {
	if m != nil && m.Cid != nil {
		return *m.Cid
	}
	return 0
}

func (m *ApplyCourseInfo) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *ApplyCourseInfo) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

// 批量报名的接口重试
type BatchApplyCourseWhiteRetryReq struct {
	TaskId           *int64 `protobuf:"varint,1,opt,name=task_id" json:"task_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BatchApplyCourseWhiteRetryReq) Reset()                    { *m = BatchApplyCourseWhiteRetryReq{} }
func (m *BatchApplyCourseWhiteRetryReq) String() string            { return proto.CompactTextString(m) }
func (*BatchApplyCourseWhiteRetryReq) ProtoMessage()               {}
func (*BatchApplyCourseWhiteRetryReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *BatchApplyCourseWhiteRetryReq) GetTaskId() int64 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

type BatchApplyCourseWhiteRetryResp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *BatchApplyCourseWhiteRetryResp) Reset()                    { *m = BatchApplyCourseWhiteRetryResp{} }
func (m *BatchApplyCourseWhiteRetryResp) String() string            { return proto.CompactTextString(m) }
func (*BatchApplyCourseWhiteRetryResp) ProtoMessage()               {}
func (*BatchApplyCourseWhiteRetryResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func init() {
	proto.RegisterType((*BatchApplyCourseWhiteReq)(nil), "com.tencent.edu.k12.pb.k12_admin_apply_course_svr.BatchApplyCourseWhiteReq")
	proto.RegisterType((*BatchApplyCourseWhiteResp)(nil), "com.tencent.edu.k12.pb.k12_admin_apply_course_svr.BatchApplyCourseWhiteResp")
	proto.RegisterType((*ApplyCourseInfo)(nil), "com.tencent.edu.k12.pb.k12_admin_apply_course_svr.ApplyCourseInfo")
	proto.RegisterType((*BatchApplyCourseWhiteRetryReq)(nil), "com.tencent.edu.k12.pb.k12_admin_apply_course_svr.BatchApplyCourseWhiteRetryReq")
	proto.RegisterType((*BatchApplyCourseWhiteRetryResp)(nil), "com.tencent.edu.k12.pb.k12_admin_apply_course_svr.BatchApplyCourseWhiteRetryResp")
}

func init() { proto.RegisterFile("k12_admin_course_apply_svr.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x89, 0xf5, 0x67, 0xbc, 0x03, 0x76, 0x08, 0x08, 0xb1, 0xa2, 0x94, 0xae, 0xba, 0x0a,
	0xb6, 0x6f, 0x30, 0xe3, 0x4a, 0x74, 0xa1, 0x6e, 0x5c, 0xb8, 0x08, 0xb1, 0x89, 0x4c, 0xa8, 0xd3,
	0xc4, 0x24, 0x1d, 0xe9, 0x83, 0xf8, 0x22, 0xbe, 0x81, 0x6f, 0x26, 0x9d, 0x2a, 0x83, 0x62, 0x05,
	0x87, 0x2e, 0xcf, 0x4d, 0xce, 0xf9, 0xb8, 0xe7, 0x42, 0x5c, 0x66, 0x39, 0xe3, 0x62, 0xa1, 0x2a,
	0x56, 0xe8, 0xda, 0x3a, 0xc9, 0xb8, 0x31, 0x4f, 0x0d, 0x73, 0x4b, 0x4b, 0x8d, 0xd5, 0x5e, 0xe3,
	0xac, 0xd0, 0x0b, 0xea, 0x65, 0x55, 0xc8, 0xca, 0x53, 0x29, 0x6a, 0x5a, 0x66, 0x39, 0x35, 0x0f,
	0x74, 0x6d, 0xec, 0x1c, 0x9f, 0x76, 0xb7, 0xb4, 0xc9, 0x0b, 0x90, 0x19, 0xf7, 0xc5, 0x7c, 0xda,
	0x3e, 0x9c, 0xaf, 0xe6, 0x77, 0x73, 0xe5, 0xe5, 0xad, 0x7c, 0xc6, 0xf7, 0x10, 0xf2, 0xf5, 0xf8,
	0xa2, 0x7a, 0xd4, 0x04, 0xc5, 0x41, 0x3a, 0xce, 0x67, 0xf4, 0xdf, 0x20, 0x3a, 0xfd, 0x9e, 0x94,
	0x1c, 0xc3, 0x51, 0x0f, 0xd8, 0x99, 0x84, 0x41, 0xf8, 0xe3, 0x3f, 0x9e, 0xc0, 0xa8, 0x56, 0x82,
	0xf9, 0xc6, 0x48, 0x82, 0x62, 0x94, 0x06, 0x78, 0x0c, 0x41, 0xad, 0x04, 0xd9, 0xfa, 0x12, 0x85,
	0x12, 0x24, 0x58, 0x89, 0x09, 0x8c, 0xb4, 0x91, 0x96, 0x7b, 0x6d, 0xc9, 0x76, 0x8c, 0xd2, 0x7d,
	0x7c, 0x00, 0xbb, 0x56, 0x72, 0xa7, 0x2b, 0xb2, 0xd3, 0xea, 0xe4, 0x0c, 0x4e, 0x7a, 0xe8, 0xde,
	0x36, 0xed, 0xee, 0x21, 0xec, 0x79, 0xee, 0x4a, 0xa6, 0x44, 0x47, 0x4b, 0x62, 0x38, 0xfd, 0xcb,
	0xe1, 0x4c, 0xfe, 0x1a, 0x40, 0xd4, 0x5f, 0x00, 0x7e, 0x43, 0x70, 0xf8, 0x6b, 0x02, 0xbe, 0xdc,
	0xa0, 0xce, 0xbe, 0xa3, 0x45, 0x57, 0xc3, 0x85, 0x39, 0x83, 0xdf, 0x11, 0x44, 0xfd, 0x6b, 0xe3,
	0xeb, 0xe1, 0x60, 0x5d, 0xef, 0xd1, 0xcd, 0xc0, 0x89, 0xce, 0x7c, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xc1, 0xf3, 0x16, 0xc9, 0x38, 0x03, 0x00, 0x00,
}
